Linux
1.pwd # определяю текущий каталог
/ # месторасположение
cd /html # ввожу путь к папке html 
ls -a # вывожу список всех файлов,включая скрытые, в папке html
.htaccess
index.html
404.html
2. cd ../logs/access.log # поднимаюсь на каталог выше, опускаюсь на два каталога вниз к access.log
grep -c 404 access.log # подсчёт совпадений строки 404
n-число
3. cd ../html/404.html # поднимаюсь на каталог выше,опускаю на два к 404.html
cp 404.html 403.html # копирую файл
sed -i s/404/403/g  var/www/html/403.html #заменяю все строки 404 на 403 в файле 403.html указывая к нему путь
4.ls -l # узнаю детальную информацию о файлах в папке,в том числе права доступа у всех файлов,предположим у index.html ни для каких групп нет 
chmod u=rw, g=r, 0= index.html #присваиваю пользователю: чтение,запись;группе чтение;остальным убираю права,если они были бы
5.ln -s /../var/www/logs/access.log /html/Alink # создал символическую ссылку на файл access.log назвав Alink указав на папку html
6.ls -a /../var # просмотр всех файлов в каталоге,без перемещения в сам каталог
7.cat>503.html # команда cat перенаправляет в новосозданный файл 503.html
<html>
    <head>
        <title>503</title>
    </head>
</html> # вводим текст
Ctrl+D #графически отобразил нажатие комбинации клавиш Ctrl+D тем самым завершив произвольный ввод

*******

Git
Git init # запуск существующего/создание подкаталога гит 
Git remote add origin git@example.com:example/test.git # создаем новый пульт дистанционного управления с именем origin, расположенный по адресу git@exam...
Git pull origin dev # скачиваем актуальную версию ветки
Nano Readme.md # создаем файл Readme.md в ветке dev
### May be in the future # добавляя текст в Readme.md
^O # запись
^X # выход
Git add # добавляем изменения для последующего сохранения
Git commit -m "init Readme" # сохранения на удалённом репозитории
Git push origin dev # указываем куда конкретно хотим сохранить

*******

MongoDB
1.> db.posts.find().skip(5)
2.> db.posts.find( { like: { $gt: 100} } );
3.> db.posts.insertOne({"all like": 10234, "all dislike": 2078})
4.> db.posts.aggregate([{$group : {_id : “autor”, total_like : {$sum : “$like”}}}])


